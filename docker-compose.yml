version: '3.9'

services:
  postgres:
    image: postgres:13
    container_name: rasa_postgres
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      POSTGRES_USER: ${DB_USER}  # Adicionei esta linha para garantir o usuário
    ports:
      - "5432:5432"
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 30

  pgadmin:  # Serviço adicionado aqui
    image: dpage/pgadmin4
    container_name: rasa_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin  # Persistência dos dados do pgAdmin
    ports:
      - "5050:80"     # HOST:CONTAINER
      - "5543:443"    # se quiser SSL
    depends_on:
      - postgres
    restart: unless-stopped

  db_setup:
    build:
      context: .
      dockerfile: Dockerfile.actions
    container_name: rasa_db_setup
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./actions:/app/actions
      - ./scripts:/app/scripts
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=$${DB_PASSWORD} psql -h postgres -U postgres -d $${DB_NAME} -c 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 30
    command: >
      sh -c '
      echo "Aguardando PostgreSQL...";
      until PGPASSWORD=$${DB_PASSWORD} psql -h postgres -U postgres -d $${DB_NAME} -c "SELECT 1" >/dev/null 2>&1; do
        sleep 2;
      done;
      echo "PostgreSQL pronto!";
      python /app/scripts/populate_db.py;
      echo "✅ Banco populado!";
      tail -f /dev/null
      '

  rasa:
    build:
      context: .
      dockerfile: Dockerfile.rasa
    container_name: rasa_server
    env_file: .env
    ports:
      - "5005:5005"
    volumes:
      - .:/app
    depends_on:
      - db_setup
    command: ["run", "--enable-api", "--cors", "*", "--debug", "-p", "5005"]

  action_server:
    build:
      context: .
      dockerfile: Dockerfile.actions
    container_name: rasa_action_server
    env_file: .env
    volumes:
      - ./actions:/app/actions
    ports:
      - "5055:5055"
    depends_on:
      db_setup:
        condition: service_completed_successfully
    command: >
        sh -c '
        echo "Aguardando PostgreSQL...";
        until PGPASSWORD=$${DB_PASSWORD} psql -h postgres -U postgres -d $${DB_NAME} -c "SELECT 1" >/dev/null 2>&1; do
          sleep 2;
          echo "Ainda esperando PostgreSQL...";
        done;
        echo "PostgreSQL pronto! Verificando ações...";
        ls -la /app/actions;
        echo "Iniciando action server...";
        python -m rasa_sdk --actions actions --port 5055 || (echo "Falha ao iniciar"; sleep 30; exit 1)
        '
    stdin_open: true
    tty: true
    restart: unless-stopped

  rasa_web:
    build:
      context: .
      dockerfile: Dockerfile.rasa
    container_name: rasa_web
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - rasa
    command: ["run", "--enable-api", "--cors", "*", "--debug", "-p", "8000"]

volumes:
  postgres_data:
  pgadmin_data:  # Volume adicionado para persistência do pgAdmin