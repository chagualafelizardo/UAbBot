FROM python:3.10-slim

# Evita a criação de arquivos .pyc e permite saída sem buffer
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    # Configuração do Hugging Face
    HF_HUB_DISABLE_TELEMETRY=1 \
    TRANSFORMERS_CACHE=/app/data/model_cache \
    HF_HOME=/app/data/model_cache \
    TORCH_HOME=/app/data/model_cache \
    # Configuração do NLTK
    NLTK_DATA=/app/data/nltk_data

# Atualiza o sistema e instala as dependências do sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    libpq-dev \
    wget \
    curl \
    gnupg2 \
    ca-certificates \
    postgresql-client \
    libxml2-dev \
    libxslt-dev \
    libpoppler-cpp-dev \
    pkg-config \
    libffi-dev \
    python3-dev \
    libmagic1 \
    # Dependências para conexão e OCR
    netcat-openbsd \
    tesseract-ocr \
    tesseract-ocr-por \
    poppler-utils \
    libtesseract-dev \
    libleptonica-dev \
    # Dependências para otimização
    libopenblas-dev \
    libomp-dev \
    # Dependências para NLTK
    unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Define diretório de trabalho
WORKDIR /app

# Copia apenas o requirements.txt inicialmente para usar cache
COPY requirements.txt .

# Instala os pacotes Python PRIMEIRO
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir nltk

# Baixa os dados do NLTK necessários
RUN mkdir -p /app/data/nltk_data && \
    python -c "import nltk; nltk.download('punkt', download_dir='/app/data/nltk_data'); nltk.download('stopwords', download_dir='/app/data/nltk_data'); nltk.download('averaged_perceptron_tagger', download_dir='/app/data/nltk_data')"

# SÓ DEPOIS faz o download do modelo
RUN mkdir -p /app/data/model_cache && \
    python -c "from sentence_transformers import SentenceTransformer; SentenceTransformer('all-MiniLM-L6-v2', cache_folder='/app/data/model_cache')"

# Cria diretório para dados persistentes
RUN mkdir -p /app/data && chmod -R a+rwx /app/data

# Copia o código da aplicação
COPY ./scripts /app/scripts
COPY ./actions /app/actions

# Define o ponto de entrada padrão
CMD ["python", "/app/scripts/document_loader.py"]